<core:FragmentDefinition 
    xmlns="sap.m" 
	xmlns:l="sap.ui.layout" 
	xmlns:f="sap.ui.layout.form" 
	xmlns:core="sap.ui.core">

    <Table id="idOrderItemTab" 
            items="{orderItems>/results}" 
            inset="false" 
            backgroundDesign="Transparent" 
            width="auto" 
            class="sapUiNoContentPadding"
            modeAnimationOn="true" 
            mode="MultiSelect" 
            selectionChange="onSelectedDetail"
            noDataText="{i18n>noDataText}"
            includeItemInSelection="false" 
            itemPress="onPressSchedule">
        <headerToolbar>
            <Toolbar>
                <Label text="{i18n>orderItem}"/>
                <ToolbarSeparator/>
                
                <Button icon="sap-icon://simulate" text="{i18n>simulation}" press="simulateOrder" tooltip="{i18n>simulation}" type="Default"/>
                <ToolbarSpacer/>
                <ToolbarSeparator/>
                <Button icon="sap-icon://add" press="handleAddItem" tooltip="{i18n>addTooltip}"/>
                <Button icon="sap-icon://sys-minus" press="handleRemoveItem" tooltip="{i18n>remTooltip}"/>
            </Toolbar>
        </headerToolbar>
        <infoToolbar>
            <OverflowToolbar visible="false" id="idInfoToolbar">
                <Label id="idFilterLabel"/>
            </OverflowToolbar>
        </infoToolbar>
        <columns >
            <Column minScreenWidth="Desktop" demandPopin="false" width="5rem"  hAlign="Begin" vAlign="Middle">
                <Text text="{i18n>posnr}"/>
            </Column>
            <Column minScreenWidth="Phone" demandPopin="true" width="auto"  hAlign="Begin" vAlign="Middle">
                <Text text="{i18n>material}"/>
            </Column>
            <Column minScreenWidth="Desktop" demandPopin="true" width="10rem"  hAlign="Begin" vAlign="Middle">
                <Text text="{i18n>materialDesc}"/>
            </Column>
            <Column minScreenWidth="Desktop" demandPopin="true" width="4rem"  hAlign="Begin" vAlign="Middle">
                <Text text="{i18n>meins}"/>
            </Column>
            <Column minScreenWidth="Desktop" demandPopin="true" width="auto"  hAlign="Begin" vAlign="Middle" 
                    visible="{mainView>/bCustomerRef}">
                <Text text="{i18n>refDoc}"/>
            </Column>
            <Column minScreenWidth="Desktop" demandPopin="true" width="7rem"  hAlign="Begin" vAlign="Middle">
                <Text text="{i18n>reqDate}"/>
            </Column>
            <Column minScreenWidth="Desktop" demandPopin="true" width="9rem" hAlign="Begin" vAlign="Middle">
                <Text text="{i18n>qty}"/>
            </Column>
            <Column minScreenWidth="Desktop" demandPopin="true" width="6rem" hAlign="Begin" vAlign="Middle">
                <Text text="{i18n>unitPrice}"/>
            </Column>
            <Column minScreenWidth="Desktop" demandPopin="true" width="6rem" hAlign="Begin" vAlign="Middle">
                <Text text="{i18n>price}"/>
            </Column>
            <Column minScreenWidth="Desktop" demandPopin="true" width="6rem" hAlign="Begin" vAlign="Middle">
                <Text text="{i18n>currency}"/>
            </Column>
        </columns>
        <items>
            <ColumnListItem vAlign="Middle" type="Navigation" >
                <cells>
                    <ObjectIdentifier title="{= parseFloat(${orderItems>Posnr})}"/>
                    <Input id="productInput"
                        type="Text"
                        value="{orderItems>Material}"
                        valueState="{= ${orderItems>Material} === null ? 'Error' : 'None' }"
                        placeholder="{18n>enterProduct}"
                        showValueHelp="true"
                        valueHelpOnly="true"
                        class="sapUiTinyMarginBottom sapUiTinyMarginTop"
						valueHelpRequest="handleValueHelp"
                        width="100%" />
                    <ObjectIdentifier text="{orderItems>MaterialDesc}"/>
                    <ObjectIdentifier text="{orderItems>Meins}"/>
                    <Input id="refdocInput"
                        type="Text"
                        value="{ parts : [ 'orderItems>RefDocNo','orderItems>RefDocItm' ] }" 
                        placeholder="{18n>enterRefdoc}"
                        showValueHelp="true"
                        valueHelpOnly="true"
                        class="sapUiTinyMarginBottom sapUiTinyMarginTop"
						valueHelpRequest="handleValueHelpRefdoc"
                        width="100%" />
                    <DatePicker id="reqDateInput"
                        displayFormat="short" 
                        valueFormat="yyyy-MM-dd"
                        value="{orderItems>TerminTarihi}"
                        valueState="{= ${orderItems>TerminTarihi} === null ? 'Error' : 'None' }"
                        placeholder="{18n>selectReqDate}"
                        width="100%"
                        class="sapUiTinyMarginBottom sapUiTinyMarginTop"
                        change="handleChangeReqDate"/>
                    <Input id="qtyInput"
                        type="Number"
                        value="{path:'orderItems>Miktar', 
                                type: 'sap.ui.model.type.Float', 
                                formatOptions: { minFractionDigits: 2, maxFractionDigits: 2}}"
                        valueState="{= ${orderItems>Miktar} === 0 || ${orderItems>Miktar} === null ? 'Error' : 'None' }"
                        placeholder="{18n>enterQty}"
                        class="sapUiTinyMarginBottom sapUiTinyMarginTop"
                        width="100%"
                        change="handleChangeQty" />
					<ObjectNumber
                        class="sapUiTinyMarginBottom sapUiTinyMarginTop"
                        number="{ parts:[{path:'orderItems>UnitPrice'},{path:'orderItems>UnitCurr'}],
                                  type: 'sap.ui.model.type.Currency',
                                  formatOptions: {showMeasure: false} }"
                        unit="{orderItems>UnitCurr}" />
                    <Input id="priceInput"
                        type="Number"
                        enabled="{orderItems>Simulate}"
                        value="{path:'orderItems>Price', 
                                type: 'sap.ui.model.type.Float', 
                                formatOptions: { minFractionDigits: 2, maxFractionDigits: 2}}"
                        placeholder="{18n>enterPrice}"
                        class="sapUiTinyMarginBottom sapUiTinyMarginTop"
                        width="100%"
                        change="handleChangePrice" /> 
                     <Input id="currInput"
                        type="Text"
                        enabled="{orderItems>Simulate}"
                        value="{orderItems>Currency}" 
                        placeholder="{18n>selectCurrency}"
                        showValueHelp="true"
                        valueHelpOnly="true"
                        class="sapUiTinyMarginBottom sapUiTinyMarginTop"
						valueHelpRequest="handleValueHelpCurrency"
                        width="100%" />                                   
                </cells>
            </ColumnListItem>
        </items>
    </Table>
</core:FragmentDefinition>